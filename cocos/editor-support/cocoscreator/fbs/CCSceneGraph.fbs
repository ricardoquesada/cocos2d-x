namespace flatbuffers;

enum FontType:byte { System = 0, BMFont = 1, TTF = 2 }

// New nodes should be added at the end of the union
// no more than 255 union objects can be added
union AnyNode {Sprite}

table SceneGraph
{
    version:string;

    root:NodeTree;
}

table NodeTree
{
    classname:string;
    customClassName:string;

    // Flatbuffers doesn't support array of unions
    // so split the tree from node
    // children:[NodeTree];
    node:Sprite;
}

table Node
{
    contentSize:Size;
    enabled:bool = true;
    name:string;
    anchorPoint:Vec2;
    // cascadeOpacityEnabled:bool = true;
    // color:RGB;
    // globalZorder:int = 0;
    // localZorder:int = 0;
    // opacity:ubyte = 255;
    // opacityModifyRGB:bool = true;
    // position:Vec2;
    // rotationSkew:Vec2;
    // scale:Vec2;
    // tag:int = 0;
}

table Sprite
{
    node:Node;
    spriteFrameName:string;
    centerRect:Rect;
}

table Label
{
    node:Node;

    labelText:string;
    horizontalAlignment:float;
    verticalAlignment:float;
    fontSize:float;
    fontType:FontType;
}

table Particle
{
    node:Node;

    plistFile:string;
}


table TileMap
{
    node:Node;

    tmxFile:string;
}

struct Vec2
{
    x:float;
    y:float;
}

struct Vec3
{
    x:float;
    y:float;
    z:float;
}

struct Size
{
    w:float;
    h:float;
}

struct Rect
{
    x:float;
    y:float;
    w:float;
    h:float;
}

struct RGB
{
    r:ubyte;
    g:ubyte;
    b:ubyte;
}

struct RGBA
{
    r:ubyte;
    g:ubyte;
    b:ubyte;
    a:ubyte;
}

root_type SceneGraph;

